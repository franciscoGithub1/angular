{"version":3,"sources":["webpack:///C:/Fidenslat/Ginger/ginger.client.src/node_modules/@matheo/datasource/fesm5/matheo-datasource.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACc;AACb;AACC;AACiG;AACtD;AACtC;AACqE;;AAE3H;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,mBAAmB,EAAE;AAC/C,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,iBAAiB,EAAE;AAC7C,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,oBAAoB,EAAE;AAChD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,iBAAiB,EAAE;AAC7C,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,wBAAwB,EAAE;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,sDAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,mBAAmB,EAAE;AAC3C;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,SAAS,sDAAO,IAAI,EAAE;AAC5C;AACA,2BAA2B,EAAE;AAC7B;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,QAAQ,oDAAK,GAAG,QAAQ,EAAE;AACvD,2BAA2B;AAC3B;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,0DAAa;AAC5B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,mBAAmB,EAAE;AAC3C,cAAc,kDAAa,eAAe,sDAAQ,mBAAmB,+CAAE,iBAAiB,0CAAO,eAAe,sDAAQ,uBAAuB,0DAAG;AAChJ,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,4CAA4C,EAAE;AACpE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAe,GAAG;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,WAAW,EAAE,EAAE;AACxC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,kDAAkD,EAAE,OAAO;AAC3D,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,sDAAQ,GAAG;AACtC;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,wBAAwB,sDAAQ,GAAG;AACnC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,GAAG,QAAQ,iBAAiB;AAC9D;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,GAAG,QAAQ,kBAAkB;AAC/D;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,+BAA+B,6BAA6B,sDAAO,aAAa,EAAE;AAClF;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,kDAAO;AACtB;AACA,QAAQ,kDAAK,kBAAkB,gEAAS,SAAS,2DAAI;AACrD,gBAAgB,2DAAI;AACpB;AACA,QAAQ,0DAAG;AACX,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,SAAS;AACT;AACA,QAAQ,6DAAM;AACd,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,mCAAmC,EAAE,IAAI,iEAAU;AAC9E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAI,KAAK,0DAAG;AAClC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,oDAAoD,EAAE;AACpF;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,+BAA+B,EAAE;AAC/D;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,+CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE,kCAAkC,gEAAS,qBAAqB,0DAAG;AAChG,oBAAoB;AACpB;AACA,qBAAqB,2BAA2B,EAAE,IAAI,gEAAS;AAC/D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+BAA+B,EAAE,IAAI,gEAAS;AACtE,oBAAoB;AACpB;AACA,qBAAqB,yBAAyB,EAAE,IAAI,0DAAG;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE,IAAI,2EAAoB,mBAAmB,0DAAG;AACxG,oBAAoB;AACpB;AACA,qBAAqB,0BAA0B,EAAE,IAAI,gEAAS;AAC9D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8BAA8B,EAAE,IAAI,0DAAG;AAC/D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE,IAAI,0DAAG;AACjE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8BAA8B,EAAE,IAAI,iEAAU;AACtE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE,IAAI,6DAAM;AACzE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,6DAAU;;AAEZ;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,mCAAmC,+DAAiB;AACpD,qCAAqC,qEAAuB;AAC5D,wDAAwD,kBAAkB,wEAAwE,cAAc,kBAAkB,4BAA4B,aAAa,sBAAsB,iBAAiB,WAAW,mBAAmB,qBAAqB,0BAA0B,mBAAmB,oCAAoC,gBAAgB,8BAA8B,gBAAgB,aAAa;AACjd,iBAAiB;AACjB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,OAAO,mDAAK,EAAE;AACrC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qCAAqC,gEAAS;AAC9C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uFAAuF,ucAAuc,wBAAwB,gJAAgJ,mUAAmU,eAAe,2SAA2S,wBAAwB;AAC31C;AACA;AACA,qBAAqB;AACrB,mCAAmC,+DAAiB;AACpD,qCAAqC,qEAAuB;AAC5D,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,oBAAoB,OAAO,yDAAW,4BAA4B;AAClE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY,EAAE,0EAAwB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0EAAwB;AAChD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mCAAmC,0DAAG;AACtC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6BAA6B,EAAE;AACvD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB;AACrB;AACA;AACA,SAAS,EAAE,EAAE;AACb,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE0N;;AAE1N,6C","file":"default~roles-roles-module~usuarios-usuarios-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material';\nimport { DataSource } from '@angular/cdk/table';\nimport { isEmpty, merge, isEqual } from 'lodash';\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, Directive, ChangeDetectorRef, HostBinding, NgModule } from '@angular/core';\nimport { combineLatest, merge as merge$1, of, BehaviorSubject, Subject, timer } from 'rxjs';\nimport { __extends, __assign, __spread } from 'tslib';\nimport { tap, catchError, distinctUntilChanged, filter, map, skipWhile, switchMap, take, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config Texts\n */\n/**\n * @return {?}\n */\nfunction emptyMsg() {\n    return 'No data available';\n}\n/**\n * @return {?}\n */\nfunction waitMsg() {\n    return 'Please wait...';\n}\n/**\n * @return {?}\n */\nfunction delayMsg() {\n    return 'The data is still loading...';\n}\n/**\n * @return {?}\n */\nfunction timeoutMsg() {\n    return 'Loading has timed out, please try again.';\n}\n/**\n * Debug Messages\n * @return {?}\n */\nfunction removingStream() {\n    return \"Removing stream\";\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction setValue(name) {\n    return name + \" setted:\";\n}\n/**\n * @param {?} name\n * @param {?} required\n * @return {?}\n */\nfunction srcAdding(name, required) {\n    return required\n        ? \"Adding required '\" + name + \"' stream\"\n        : \"Adding optional '\" + name + \"' stream\";\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction srcEmpty(name) {\n    return \"Adding empty stream '\" + name + \"'\";\n}\n/**\n * @return {?}\n */\nfunction srcInvalid() {\n    return \"Empty stream provided!\";\n}\n/**\n * @return {?}\n */\nfunction srcEmitted() {\n    return \"Stream emitted:\";\n}\n/**\n * @return {?}\n */\nfunction isAutoStarting() {\n    return \"DataSource starting automatically\";\n}\n/**\n * @param {?} length\n * @return {?}\n */\nfunction notAutoStarting(length) {\n    return (\"DataSource not auto starting with \" + length.optional +\n        (\" optional and \" + length.required + \" required streams\"));\n}\n/**\n * @return {?}\n */\nfunction resolvedArgs() {\n    return 'Resolved request';\n}\n/**\n * @return {?}\n */\nfunction queryResponse() {\n    return 'Query response:';\n}\n/**\n * @return {?}\n */\nfunction queryTimeout() {\n    return 'Query timeout count:';\n}\n/**\n * @return {?}\n */\nfunction responseTotal() {\n    return 'Total returned:';\n}\n/**\n * @param {?} result\n * @return {?}\n */\nfunction responseSuccess(result) {\n    /** @type {?} */\n    var len = result.length;\n    return [\"Response succeed with \" + len + \" item\" + (len === 1 ? '' : 's'), result];\n}\n/**\n * @param {?} errors\n * @return {?}\n */\nfunction responseError(errors) {\n    return ['Response failed', errors];\n}\n/**\n * Error Messages\n * @param {?} item\n * @return {?}\n */\nfunction addWhenRunning(item) {\n    return \"Adding \\\"\" + item + \"\\\" after the DataSource is already running.\";\n}\n/**\n * @param {?} item\n * @return {?}\n */\nfunction rmWhenRunning(item) {\n    return \"Trying to remove \\\"\" + item + \"\\\" after the DataSource is already running.\";\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction nonNumeric(name) {\n    return 'Non numeric ${name} passed';\n}\n/**\n * @return {?}\n */\nfunction missingDataSourceInput() {\n    return 'mat-datasource must receive a dataSource input';\n}\n/**\n * @return {?}\n */\nfunction resException() {\n    return 'Exception processing the result';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar defaultConfig = {\n    debug: false,\n    autoStart: true,\n    showErrors: true,\n    emptyMsg: emptyMsg,\n    waitMsg: waitMsg(),\n    delayMsg: delayMsg(),\n    timeoutMsg: timeoutMsg(),\n    progressMode: 'indeterminate'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Logging Handler\n */\nvar  /**\n * Logging Handler\n */\nDataSourceLogger = /** @class */ (function () {\n    function DataSourceLogger(sourceName) {\n        this.sourceName = sourceName;\n        /**\n         * Errors Collection\n         */\n        this._errors = {};\n    }\n    Object.defineProperty(DataSourceLogger.prototype, \"config\", {\n        set: /**\n         * @param {?} config\n         * @return {?}\n         */\n        function (config) {\n            this._config = config;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Error Management Methods\n     */\n    /**\n     * Error Management Methods\n     * @return {?}\n     */\n    DataSourceLogger.prototype.getErrors = /**\n     * Error Management Methods\n     * @return {?}\n     */\n    function () {\n        return this._errors;\n    };\n    /**\n     * @param {?} errorCode\n     * @param {?} error\n     * @return {?}\n     */\n    DataSourceLogger.prototype.addError = /**\n     * @param {?} errorCode\n     * @param {?} error\n     * @return {?}\n     */\n    function (errorCode, error) {\n        this._errors[errorCode] = typeof error === 'string' ? error : error.message;\n    };\n    /**\n     * @param {?} errorCode\n     * @param {?} error\n     * @return {?}\n     */\n    DataSourceLogger.prototype.handleError = /**\n     * @param {?} errorCode\n     * @param {?} error\n     * @return {?}\n     */\n    function (errorCode, error) {\n        this._config.errorHandler\n            ? this.addError(errorCode, this._config.errorHandler(error))\n            : this.addError(errorCode, error);\n    };\n    /**\n     * @param {?} errorCode\n     * @return {?}\n     */\n    DataSourceLogger.prototype.hasError = /**\n     * @param {?} errorCode\n     * @return {?}\n     */\n    function (errorCode) {\n        return this._errors.hasOwnProperty(errorCode);\n    };\n    /**\n     * @param {?=} force\n     * @return {?}\n     */\n    DataSourceLogger.prototype.hasErrors = /**\n     * @param {?=} force\n     * @return {?}\n     */\n    function (force) {\n        if (force === void 0) { force = false; }\n        return ((this._config.showErrors || force) && !!Object.keys(this._errors).length);\n    };\n    /**\n     * @param {?} attempt\n     * @return {?}\n     */\n    DataSourceLogger.prototype.getTimeoutError = /**\n     * @param {?} attempt\n     * @return {?}\n     */\n    function (attempt) {\n        switch (attempt) {\n            case 0:\n                return this._config.waitMsg;\n            case 1:\n                return this._config.delayMsg;\n            default:\n                throw new Error(this._config.timeoutMsg);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DataSourceLogger.prototype.clearErrors = /**\n     * @return {?}\n     */\n    function () {\n        this._errors = {};\n    };\n    /**\n     * Debug Utils\n     */\n    // display a message according a condition\n    /**\n     * Debug Utils\n     * @param {?} truthy\n     * @param {?=} falsy\n     * @param {?=} condition\n     * @return {?}\n     */\n    // display a message according a condition\n    DataSourceLogger.prototype.debug = /**\n     * Debug Utils\n     * @param {?} truthy\n     * @param {?=} falsy\n     * @param {?=} condition\n     * @return {?}\n     */\n    // display a message according a condition\n    function (truthy, falsy, condition) {\n        if (condition === void 0) { condition = true; }\n        if (this._config.debug) {\n            if (condition) {\n                console.log(this.sourceName + \":\", truthy);\n            }\n            else if (falsy) {\n                console.log(this.sourceName + \":\", falsy);\n            }\n        }\n    };\n    // logs an object if debug mode is enabled\n    // logs an object if debug mode is enabled\n    /**\n     * @param {?} message\n     * @param {?} obj\n     * @return {?}\n     */\n    DataSourceLogger.prototype.print = \n    // logs an object if debug mode is enabled\n    /**\n     * @param {?} message\n     * @param {?} obj\n     * @return {?}\n     */\n    function (message, obj) {\n        if (this._config.debug) {\n            console.log(this.sourceName + \":\", message, obj);\n        }\n    };\n    // throw an error if the condition is truthy\n    // throw an error if the condition is truthy\n    /**\n     * @param {?} condition\n     * @param {?} message\n     * @return {?}\n     */\n    DataSourceLogger.prototype.check = \n    // throw an error if the condition is truthy\n    /**\n     * @param {?} condition\n     * @param {?} message\n     * @return {?}\n     */\n    function (condition, message) {\n        if (condition) {\n            throw new Error(this.sourceName + \": \" + message);\n        }\n    };\n    return DataSourceLogger;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Constants\n * @type {?}\n */\nvar REQUIRED_INIT = 'required.init';\n/** @type {?} */\nvar TRIGGER_INIT = 'trigger.init';\n/** @type {?} */\nvar TRIGGER_REFRESH = 'trigger.refresh';\n/** @type {?} */\nvar TRIGGER_RELOAD = 'trigger.reload';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nDataSourceStreamer = /** @class */ (function () {\n    function DataSourceStreamer(logger) {\n        this.logger = logger;\n        // streams to listen\n        this.streams = [];\n        // micro optimization\n        this.length = {\n            required: 0,\n            optional: 0\n        };\n    }\n    Object.defineProperty(DataSourceStreamer.prototype, \"required\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.streams.filter((/**\n             * @param {?} s\n             * @return {?}\n             */\n            function (s) { return s.required; })).map((/**\n             * @param {?} s\n             * @return {?}\n             */\n            function (s) { return s.stream; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataSourceStreamer.prototype, \"optional\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.streams.filter((/**\n             * @param {?} s\n             * @return {?}\n             */\n            function (s) { return !s.required; })).map((/**\n             * @param {?} s\n             * @return {?}\n             */\n            function (s) { return s.stream; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} src\n     * @return {?}\n     */\n    DataSourceStreamer.prototype.add = /**\n     * @param {?} src\n     * @return {?}\n     */\n    function (src) {\n        this.logger.check(!src.stream, srcInvalid());\n        this.streams.push(src);\n        this.update();\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DataSourceStreamer.prototype.remove = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this.streams = this.streams.filter((/**\n         * @param {?} s\n         * @return {?}\n         */\n        function (s) { return s.name !== name; }));\n        this.update();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DataSourceStreamer.prototype.update = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this.length = {\n            required: this.required.length,\n            optional: this.optional.length - 1 // remove trigger$\n        };\n    };\n    /**\n     * @param {?} defaults\n     * @param {?} overrides\n     * @return {?}\n     */\n    DataSourceStreamer.prototype.args = /**\n     * @param {?} defaults\n     * @param {?} overrides\n     * @return {?}\n     */\n    function (defaults, overrides) {\n        // merge all the argument sources\n        /** @type {?} */\n        var args = __spread([\n            defaults\n        ], this.streams\n            .sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        function (a, b) {\n            return (a.weight || 0) < (b.weight || 0) ? -1 : 1;\n        }))\n            .map((/**\n         * @param {?} s\n         * @return {?}\n         */\n        function (s) { return s.getter(); })), [\n            overrides\n        ]).filter((/**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { return !isEmpty(v); }));\n        // all the defaults and getters must complete a T object\n        return (/** @type {?} */ ((args.length > 1\n            ? args.reduce((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) { return merge({}, a, b); }))\n            : args[0] || {})));\n    };\n    /**\n     * @return {?}\n     */\n    DataSourceStreamer.prototype.connect = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return combineLatest(this.streams.some((/**\n         * @param {?} s\n         * @return {?}\n         */\n        function (s) { return s.required; }))\n            ? combineLatest.apply(void 0, __spread(this.required)) : of(REQUIRED_INIT), merge$1.apply(void 0, __spread(this.optional))).pipe(tap((/**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { return _this.logger.print(srcEmitted(), v); })));\n    };\n    return DataSourceStreamer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n * @template REQ, RAW, RES\n */\nvar  /**\n * @abstract\n * @template REQ, RAW, RES\n */\nMatDataSource = /** @class */ (function (_super) {\n    __extends(MatDataSource, _super);\n    /**\n     * DataSource.\n     */\n    function MatDataSource() {\n        var _this = _super.call(this) || this;\n        _this._loading = true;\n        _this._reloading = true;\n        _this._loaded = false;\n        _this._empty = true;\n        _this._total = 0;\n        _this._data = [];\n        _this._progress = 0;\n        _this._config = defaultConfig;\n        /**\n         * Control members for the datasource processing.\n         */\n        _this.defaults = {};\n        _this.overrides = {};\n        /**\n         * Error control vars.\n         */\n        _this._logger = new DataSourceLogger(_this.constructor.name);\n        /**\n         * Stream only used to trigger a refresh on the data.\n         * Can receive some Criteria overrides for a temporary update.\n         * It has to be used outside the datasource to prevent infinite loops.\n         */\n        _this._trigger$ = new BehaviorSubject(TRIGGER_INIT);\n        /**\n         * Executions counter\n         */\n        _this._triggered = 0;\n        /**\n         * Output Emitter to refresh the UI.\n         */\n        _this._change$ = new BehaviorSubject({});\n        /**\n         * Registered streams\n         */\n        _this._streams = new DataSourceStreamer(_this._logger);\n        /**\n         * Disconnect internal observable.\n         */\n        _this._disconnect$ = new Subject();\n        // initial config sync\n        _this._logger.config = _this._config;\n        // listen the internal trigger\n        _this.addOptional({\n            stream: _this._trigger$,\n            getter: (/**\n             * @return {?}\n             */\n            function () { return ({}); })\n        });\n        return _this;\n    }\n    Object.defineProperty(MatDataSource.prototype, \"isLoading\", {\n        /**\n         * State to control outside behavior like css classes and components.\n         * Updated by pre/postQuery to show/hide the loading overlay and empty message.\n         */\n        get: /**\n         * State to control outside behavior like css classes and components.\n         * Updated by pre/postQuery to show/hide the loading overlay and empty message.\n         * @return {?}\n         */\n        function () {\n            return this._loading;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"isLoaded\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._loaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"total\", {\n        /**\n         * Number used to calculate the pagination length.\n         * Updated after the rawResult method according to the response data.\n         */\n        get: /**\n         * Number used to calculate the pagination length.\n         * Updated after the rawResult method according to the response data.\n         * @return {?}\n         */\n        function () {\n            return this._total;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"progress\", {\n        /**\n         * Number used to calculate the loading progress.\n         * Updated while loading the query and triggering change$.\n         */\n        get: /**\n         * Number used to calculate the loading progress.\n         * Updated while loading the query and triggering change$.\n         * @return {?}\n         */\n        function () {\n            return this._progress;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"outputMsg\", {\n        /**\n         * Output message getter.\n         */\n        get: /**\n         * Output message getter.\n         * @return {?}\n         */\n        function () {\n            return this._outputMsg;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"args\", {\n        /**\n         * Accessors\n         */\n        get: /**\n         * Accessors\n         * @return {?}\n         */\n        function () {\n            return this.arguments || ((/** @type {?} */ ({})));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"progressMode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._config.progressMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"change$\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._change$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"hasErrors\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._logger.hasErrors(true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"getErrors\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._logger.getErrors();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDataSource.prototype, \"config\", {\n        /**\n         * Setters\n         */\n        // config settings\n        get: /**\n         * Setters\n         * @return {?}\n         */\n        // config settings\n        function () {\n            return this._config;\n        },\n        set: /**\n         * @param {?} config\n         * @return {?}\n         */\n        function (config) {\n            this._config = __assign({}, this._config, config);\n            this._logger.config = this._config;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Streams\n     */\n    /**\n     * Streams\n     * @param {?} args\n     * @return {?}\n     */\n    MatDataSource.prototype.addArguments = /**\n     * Streams\n     * @param {?} args\n     * @return {?}\n     */\n    function (args) {\n        this.defaults = __assign({}, this.defaults, args);\n    };\n    /**\n     * @param {?} src\n     * @return {?}\n     */\n    MatDataSource.prototype.addRequired = /**\n     * @param {?} src\n     * @return {?}\n     */\n    function (src) {\n        this._logger.check(this._triggered, addWhenRunning(src.name || src.stream));\n        this._logger.debug(srcAdding(src.name, true), srcEmpty(src.name), src.stream);\n        this._streams.add(__assign({}, src, { required: true }));\n    };\n    /**\n     * @param {?} src\n     * @return {?}\n     */\n    MatDataSource.prototype.addOptional = /**\n     * @param {?} src\n     * @return {?}\n     */\n    function (src) {\n        this._logger.check(this._triggered, addWhenRunning(src.name || src.stream));\n        this._logger.debug(srcAdding(src.name, false), srcEmpty(src.name), src.stream);\n        this._streams.add(__assign({}, src, { required: false }));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    MatDataSource.prototype.remStream = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this._logger.check(this._triggered, rmWhenRunning(name));\n        this._logger.print(removingStream(), name);\n        this._streams.remove(name);\n    };\n    /**\n     * Triggers\n     */\n    /**\n     * Triggers\n     * @param {?=} overrides\n     * @return {?}\n     */\n    MatDataSource.prototype.refresh = /**\n     * Triggers\n     * @param {?=} overrides\n     * @return {?}\n     */\n    function (overrides) {\n        if (overrides === void 0) { overrides = {}; }\n        this.overrides = overrides;\n        this._trigger$.next(TRIGGER_REFRESH);\n    };\n    /**\n     * @return {?}\n     */\n    MatDataSource.prototype.reload = /**\n     * @return {?}\n     */\n    function () {\n        if (this._loaded) {\n            this.overrides = { forceReload: true };\n        }\n        this._reloading = true;\n        this._trigger$.next(TRIGGER_RELOAD);\n    };\n    /**\n     * Data processing that can be completely customized.\n     */\n    /**\n     * Data processing that can be completely customized.\n     * @param {?} args\n     * @return {?}\n     */\n    MatDataSource.prototype.reqArguments = /**\n     * Data processing that can be completely customized.\n     * @param {?} args\n     * @return {?}\n     */\n    function (args) {\n        return args;\n    };\n    /**\n     * Data Fetching Methods\n     */\n    /**\n     * Data Fetching Methods\n     * @private\n     * @param {?} streamed\n     * @return {?}\n     */\n    MatDataSource.prototype._blockStart = /**\n     * Data Fetching Methods\n     * @private\n     * @param {?} streamed\n     * @return {?}\n     */\n    function (streamed) {\n        // check if it's not configured to start after the initial optional stream\n        /** @type {?} */\n        var block = !this._config.autoStart && streamed[1] === TRIGGER_INIT;\n        if (this._triggered === 1) {\n            this._logger.debug(isAutoStarting(), notAutoStarting(this._streams.length), !block);\n        }\n        if (block) {\n            this._loading = false;\n        }\n        return block;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatDataSource.prototype._getArgs = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        // merge all the getters outputs\n        this.arguments = this._streams.args(this.defaults, this.overrides);\n        this.overrides = {};\n        this._logger.print(resolvedArgs(), this.arguments);\n        // TODO consider any edge case with forceReload\n        delete this.arguments.forceReload;\n        return of(this.arguments);\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatDataSource.prototype._isEqual = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return (/**\n         * @param {?} prev\n         * @param {?} curr\n         * @return {?}\n         */\n        function (prev, curr) { return !_this._reloading && isEqual(prev, curr); });\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatDataSource.prototype._preQuery = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        // state update\n        this._loading = true;\n        this._reloading = false;\n        this._outputMsg = '';\n        this._logger.clearErrors();\n        this._change$.next({});\n    };\n    /**\n     * @private\n     * @param {?} args\n     * @return {?}\n     */\n    MatDataSource.prototype._execQuery = /**\n     * @private\n     * @param {?} args\n     * @return {?}\n     */\n    function (args) {\n        var _this = this;\n        /** @type {?} */\n        var query = this.rawFetch(args);\n        return merge$1(query, \n        // timers check\n        timer(5000, 8000).pipe(takeUntil(query), take(3) // 5s, 13s, 21s\n        )).pipe(take(3), \n        // delay check\n        tap((/**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            if (typeof val !== 'number') {\n                _this._logger.print(queryResponse(), val);\n            }\n            else {\n                _this._logger.print(queryTimeout(), val);\n                try {\n                    _this._outputMsg = _this._logger.getTimeoutError(val);\n                }\n                catch (e) {\n                    _this._logger.addError('timeout', e.message);\n                    _this._loading = false;\n                }\n                _this._change$.next({});\n            }\n        })), \n        // discard timer result\n        filter((/**\n         * @param {?} result\n         * @return {?}\n         */\n        function (result) { return typeof result !== 'number'; })), catchError((/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) {\n            // isolate query error\n            _this._logger.handleError('query', err);\n            return of(_this.rawDefault());\n        })));\n    };\n    /**\n     * @private\n     * @param {?} res\n     * @return {?}\n     */\n    MatDataSource.prototype._updateTotal = /**\n     * @private\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        var _this = this;\n        if (!this.hasErrors) {\n            // microtask as workaround for change detection\n            this.rawTotal(res)\n                .pipe(take(1), tap((/**\n             * @param {?} total\n             * @return {?}\n             */\n            function (total) { return _this._logger.print(responseTotal(), total); })))\n                .subscribe((/**\n             * @param {?} total\n             * @return {?}\n             */\n            function (total) { return (_this._total = total); }));\n        }\n    };\n    /**\n     * @private\n     * @param {?} res\n     * @return {?}\n     */\n    MatDataSource.prototype._postQuery = /**\n     * @private\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        /** @type {?} */\n        var hasErrors = this.hasErrors;\n        this._data = !hasErrors ? this.rawResult(res) : [];\n        this._logger.debug(responseSuccess(this._data), responseError(this.getErrors), !hasErrors);\n        this._empty = !this._data || !this._data.length;\n        if (!hasErrors && this._empty) {\n            this._outputMsg = this._config.emptyMsg();\n        }\n        this._loaded = !hasErrors;\n        this._loading = false;\n        this._change$.next({});\n        return this._data;\n    };\n    /**\n     * @private\n     * @param {?} err\n     * @return {?}\n     */\n    MatDataSource.prototype._processException = /**\n     * @private\n     * @param {?} err\n     * @return {?}\n     */\n    function (err) {\n        this._logger.print(resException(), err);\n        return of(false);\n    };\n    /**\n     * Data API\n     */\n    /**\n     * Data API\n     * @return {?}\n     */\n    MatDataSource.prototype.connect = /**\n     * Data API\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return (/** @type {?} */ (this._streams.connect().pipe(takeUntil(this._disconnect$), tap((/**\n         * @return {?}\n         */\n        function () { return _this._triggered++; })), skipWhile((/**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { return _this._blockStart(val); })), switchMap((/**\n         * @return {?}\n         */\n        function () { return _this._getArgs(); })), map((/**\n         * @param {?} req\n         * @return {?}\n         */\n        function (req) { return _this.reqArguments(req); })), distinctUntilChanged(this._isEqual()), tap((/**\n         * @return {?}\n         */\n        function () { return _this._preQuery(); })), switchMap((/**\n         * @param {?} req\n         * @return {?}\n         */\n        function (req) { return _this._execQuery(req); })), tap((/**\n         * @param {?} raw\n         * @return {?}\n         */\n        function (raw) { return _this._updateTotal(raw); })), map((/**\n         * @param {?} raw\n         * @return {?}\n         */\n        function (raw) { return _this._postQuery(raw); })), catchError((/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this._processException(err); })), filter((/**\n         * @param {?} res\n         * @return {?}\n         */\n        function (res) { return typeof res !== 'boolean'; })))));\n    };\n    /**\n     * @return {?}\n     */\n    MatDataSource.prototype.disconnect = /**\n     * @return {?}\n     */\n    function () {\n        this._trigger$.complete();\n        this._change$.complete();\n        this._disconnect$.next();\n        this._disconnect$.complete();\n    };\n    return MatDataSource;\n}(DataSource));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template REQ, RAW, RES\n */\nvar DataSourceContainer = /** @class */ (function () {\n    function DataSourceContainer() {\n        this.diameter = 40;\n        this.strokeWidth = 5;\n    }\n    /**\n     * @return {?}\n     */\n    DataSourceContainer.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._validateSource();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DataSourceContainer.prototype._validateSource = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this.dataSource) {\n            throw Error(missingDataSourceInput());\n        }\n    };\n    DataSourceContainer.decorators = [\n        { type: Component, args: [{\n                    selector: 'mat-datasource',\n                    template: \"<div class=\\\"mat-datasource-container\\\">\\n  <div [attr.hidden]=\\\"dataSource.isLoading || dataSource.isEmpty ? '' : null\\\">\\n    <ng-content select=\\\"mat-table,table\\\"></ng-content>\\n  </div>\\n\\n  <mat-datasource-overlay [dataSource]=\\\"dataSource\\\" [diameter]=\\\"diameter\\\" [strokeWidth]=\\\"strokeWidth\\\">\\n    <ng-content select=\\\"mat-datasource-empty\\\" ngProjectAs=\\\"mat-datasource-empty\\\"></ng-content>\\n    <ng-content select=\\\"mat-datasource-error\\\" ngProjectAs=\\\"mat-datasource-error\\\"></ng-content>\\n    <ng-content select=\\\"mat-datasource-loading\\\" ngProjectAs=\\\"mat-datasource-loading\\\"></ng-content>\\n  </mat-datasource-overlay>\\n</div>\\n\\n<div [attr.hidden]=\\\"dataSource.isLoading || dataSource.isEmpty ? '' : null\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n                    host: {\n                        class: 'mat-datasource'\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\".mat-datasource-container{position:relative}\", \".mat-datasource-empty,.mat-datasource-error,.mat-datasource-loading{display:block;text-align:center}\", \".mat-datasource-overlay{display:flex;flex-direction:column;min-height:120px;width:100%;align-items:center;place-content:center}.mat-datasource-overlay>*{margin-bottom:15px}.mat-datasource-overlay>:last-child{margin-bottom:0}.mat-datasource-overlay:empty{margin-bottom:0;min-height:0}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    DataSourceContainer.ctorParameters = function () { return []; };\n    DataSourceContainer.propDecorators = {\n        dataSource: [{ type: Input }],\n        diameter: [{ type: Input }],\n        strokeWidth: [{ type: Input }]\n    };\n    return DataSourceContainer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataSourceEmpty = /** @class */ (function () {\n    function DataSourceEmpty() {\n    }\n    DataSourceEmpty.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-datasource-empty',\n                    host: {\n                        class: 'mat-datasource-empty'\n                    }\n                },] }\n    ];\n    return DataSourceEmpty;\n}());\nvar DataSourceError = /** @class */ (function () {\n    function DataSourceError() {\n    }\n    DataSourceError.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-datasource-error',\n                    host: {\n                        class: 'mat-datasource-error'\n                    }\n                },] }\n    ];\n    return DataSourceError;\n}());\nvar DataSourceLoading = /** @class */ (function () {\n    function DataSourceLoading() {\n    }\n    DataSourceLoading.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-datasource-loading',\n                    host: {\n                        class: 'mat-datasource-loading'\n                    }\n                },] }\n    ];\n    return DataSourceLoading;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template REQ, RAW, RES\n */\nvar DataSourceOverlay = /** @class */ (function () {\n    function DataSourceOverlay(cdr) {\n        this.cdr = cdr;\n        this.onDestroy = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    DataSourceOverlay.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._validateSource();\n        // listen source changes\n        this.dataSource.change$.pipe(takeUntil(this.onDestroy)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._display =\n                _this.dataSource.isLoading ||\n                    _this.dataSource.hasErrors ||\n                    _this.dataSource.isEmpty\n                    ? 'flex'\n                    : 'none';\n            _this.cdr.markForCheck();\n        }));\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DataSourceOverlay.prototype._validateSource = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this.dataSource) {\n            throw Error(missingDataSourceInput());\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DataSourceOverlay.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.onDestroy.next();\n        this.onDestroy.complete();\n    };\n    DataSourceOverlay.decorators = [\n        { type: Component, args: [{\n                    selector: 'mat-datasource-overlay',\n                    template: \"<ng-container *ngIf=\\\"dataSource.isLoading then loading; else loaded\\\"></ng-container>\\n\\n<ng-template #loading>\\n  <mat-progress-spinner\\n    [mode]=\\\"dataSource.progressMode\\\"\\n    [value]=\\\"dataSource.progress\\\"\\n    [diameter]=\\\"diameter\\\"\\n    [strokeWidth]=\\\"strokeWidth\\\"\\n  ></mat-progress-spinner>\\n\\n  <div #out>\\n    <ng-content select=\\\"mat-datasource-loading\\\"></ng-content>\\n  </div>\\n  <ng-container *ngIf=\\\"!out.childNodes.length\\\">\\n    <mat-datasource-loading *ngIf=\\\"dataSource.outputMsg\\\">{{ dataSource.outputMsg }}</mat-datasource-loading>\\n  </ng-container>\\n</ng-template>\\n\\n<ng-template #loaded>\\n  <ng-container *ngIf=\\\"dataSource.hasErrors then errors; else empty\\\"></ng-container>\\n\\n  <ng-template #errors>\\n    <div class=\\\"mat-datasource-overlay\\\" #err>\\n      <ng-content select=\\\"mat-datasource-error\\\"></ng-content>\\n    </div>\\n    <ng-container *ngIf=\\\"!err.childNodes.length\\\">\\n      <mat-datasource-error *ngFor=\\\"let error of dataSource.getErrors | keyvalue\\\">{{ error.value }}</mat-datasource-error>\\n    </ng-container>\\n  </ng-template>\\n\\n  <ng-template #empty>\\n    <div class=\\\"mat-datasource-overlay\\\" #emp>\\n      <ng-content select=\\\"mat-datasource-empty\\\"></ng-content>\\n    </div>\\n    <ng-container *ngIf=\\\"!emp.childNodes.length\\\">\\n      <mat-datasource-empty>{{ dataSource.outputMsg }}</mat-datasource-empty>\\n    </ng-container>\\n  </ng-template>\\n</ng-template>\\n\",\n                    host: {\n                        class: 'mat-datasource-overlay'\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }] }\n    ];\n    /** @nocollapse */\n    DataSourceOverlay.ctorParameters = function () { return [\n        { type: ChangeDetectorRef }\n    ]; };\n    DataSourceOverlay.propDecorators = {\n        dataSource: [{ type: Input }],\n        diameter: [{ type: Input }],\n        strokeWidth: [{ type: Input }],\n        _display: [{ type: HostBinding, args: ['style.display',] }]\n    };\n    return DataSourceOverlay;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatDataSourceModule = /** @class */ (function () {\n    function MatDataSourceModule() {\n    }\n    MatDataSourceModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, MatProgressSpinnerModule],\n                    declarations: [\n                        DataSourceContainer,\n                        DataSourceEmpty,\n                        DataSourceError,\n                        DataSourceLoading,\n                        DataSourceOverlay\n                    ],\n                    exports: [\n                        MatProgressSpinnerModule,\n                        DataSourceContainer,\n                        DataSourceEmpty,\n                        DataSourceError,\n                        DataSourceLoading\n                    ]\n                },] }\n    ];\n    return MatDataSourceModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n * @template REQ, RAW, RES\n */\nvar  /**\n * @abstract\n * @template REQ, RAW, RES\n */\nReactiveDataSource = /** @class */ (function (_super) {\n    __extends(ReactiveDataSource, _super);\n    function ReactiveDataSource() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._pageIndex = 0;\n        _this._pageSize = 10;\n        return _this;\n    }\n    Object.defineProperty(ReactiveDataSource.prototype, \"pageIndex\", {\n        /**\n         * Pagination Settings\n         */\n        get: /**\n         * Pagination Settings\n         * @return {?}\n         */\n        function () {\n            return this._pageIndex;\n        },\n        set: /**\n         * @param {?} size\n         * @return {?}\n         */\n        function (size) {\n            this._logger.check(isNaN(Number(size)), nonNumeric('pageIndex'));\n            this._logger.print(setValue('PageIndex'), Number(size));\n            this._pageIndex = Number(size);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReactiveDataSource.prototype, \"pageSize\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._pageSize;\n        },\n        set: /**\n         * @param {?} size\n         * @return {?}\n         */\n        function (size) {\n            if (size) {\n                this._logger.check(isNaN(Number(size)), nonNumeric('pageSize'));\n                this._logger.print(setValue('PageSize'), Number(size));\n                this._pageSize = Number(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // be sure the paginator's view has been initialized\n    // be sure the paginator's view has been initialized\n    /**\n     * @param {?} paginator\n     * @param {?} getter\n     * @return {?}\n     */\n    ReactiveDataSource.prototype.setPaginator = \n    // be sure the paginator's view has been initialized\n    /**\n     * @param {?} paginator\n     * @param {?} getter\n     * @return {?}\n     */\n    function (paginator, getter) {\n        this.addOptional({\n            name: 'MatPaginator',\n            stream: paginator.page,\n            getter: getter(this.pageSize)\n        });\n    };\n    // sort changes emitted will trigger an update\n    // sort changes emitted will trigger an update\n    /**\n     * @param {?} sort\n     * @param {?} getter\n     * @return {?}\n     */\n    ReactiveDataSource.prototype.setSort = \n    // sort changes emitted will trigger an update\n    /**\n     * @param {?} sort\n     * @param {?} getter\n     * @return {?}\n     */\n    function (sort, getter) {\n        this.addOptional({\n            name: 'MatSort',\n            stream: sort.sortChange,\n            getter: getter\n        });\n    };\n    /**\n     * Attachs an autocompleter with this data source filtered. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @returns Observable that emits a new value when the data changes.\n     */\n    /**\n     * Attachs an autocompleter with this data source filtered. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    ReactiveDataSource.prototype.attach = /**\n     * Attachs an autocompleter with this data source filtered. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    function () {\n        var _this = this;\n        return this.connect().pipe(map((/**\n         * @param {?} res\n         * @return {?}\n         */\n        function (res) { return _this.resFilter(res); })));\n    };\n    return ReactiveDataSource;\n}(MatDataSource));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Premade Getters\n * @param {?} paginator\n * @return {?}\n */\nfunction getterPaginator(paginator) {\n    return (/**\n     * @param {?} pageSize\n     * @return {?}\n     */\n    function (pageSize) {\n        // : DataSourceGetter<T>\n        return (/**\n         * @return {?}\n         */\n        function () { return ({\n            pageIndex: paginator ? paginator.pageIndex : 0,\n            pageSize: paginator ? paginator.pageSize : pageSize\n        }); });\n    });\n}\n/**\n * @param {?} sorter\n * @return {?}\n */\nfunction getterSort(sorter) {\n    // DataSourceGetter<T>\n    return (/**\n     * @return {?}\n     */\n    function () {\n        return sorter && sorter.active\n            ? {\n                orderBy: sorter.active,\n                orderDir: sorter.direction || undefined\n            }\n            : {};\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatDataSourceModule, MatDataSource, DataSourceLogger, ReactiveDataSource, DataSourceEmpty, DataSourceError, DataSourceLoading, getterPaginator, getterSort, DataSourceContainer as ɵa, DataSourceOverlay as ɵb };\n\n//# sourceMappingURL=matheo-datasource.js.map"],"sourceRoot":""}