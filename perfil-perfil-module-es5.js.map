{"version":3,"sources":["webpack:///./src/app/perfil/form/form.component.html","webpack:///./src/app/perfil/form/password/password.component.html","webpack:///./src/app/perfil/form/user/user.component.html","webpack:///./src/app/perfil/form/form.component.scss","webpack:///./src/app/perfil/form/form.component.ts","webpack:///./src/app/perfil/form/password/password.component.scss","webpack:///./src/app/perfil/form/password/password.component.ts","webpack:///./src/app/perfil/form/user/user.component.scss","webpack:///./src/app/perfil/form/user/user.component.ts","webpack:///./src/app/perfil/perfil-routing.module.ts","webpack:///./src/app/perfil/perfil.barrel.ts","webpack:///./src/app/perfil/perfil.module.ts"],"names":[],"mappings":"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","file":"perfil-perfil-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"outside-container\\\">\\r\\n  <div class=\\\"crud-inner-container\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-evenly stretch\\\" fxLayoutGap=\\\"10px\\\">\\r\\n\\r\\n      <div fxFlexAlign=\\\"start\\\">\\r\\n        <button class=\\\"no-padding-button\\\" mat-button color=\\\"accent\\\" [routerLink]=\\\"['/app/home']\\\">\\r\\n          <mat-icon class=\\\"remove-icon-margin\\\">keyboard_arrow_left</mat-icon>{{l('perfil.back')}}\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <mat-label class=\\\"mat-h3 crud-tittle\\\" color=\\\"accent\\\">\\r\\n        {{l('perfil.title')}}\\r\\n      </mat-label>\\r\\n\\r\\n      <app-perfil-form-user #user></app-perfil-form-user>\\r\\n\\r\\n      <app-perfil-form-password #pass\\r\\n        [attr.hidden]=\\\"!isPinSent ? '' : null\\\">\\r\\n\\r\\n        <button type=\\\"button\\\" mat-stroked-button color=\\\"primary\\\" (click)=\\\"onPasswordChange()\\\">\\r\\n          {{l('perfil.password.resendPin') | uppercase}}\\r\\n        </button>\\r\\n      </app-perfil-form-password>\\r\\n\\r\\n      <div class=\\\"panel-botones\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n        <button type=\\\"button\\\" mat-stroked-button color=\\\"primary\\\"\\r\\n          [attr.hidden]=\\\"isPinSent ? '' : null\\\" (click)=\\\"onPasswordChange()\\\">\\r\\n          {{l('perfil.password.title') | uppercase}}\\r\\n        </button>\\r\\n        <span *ngIf=\\\"isPinSent\\\">&nbsp;</span>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n          <button type=\\\"button\\\" mat-stroked-button color=\\\"primary\\\" [routerLink]=\\\"['/app/home']\\\">\\r\\n            {{l('Cancel') | uppercase}}\\r\\n          </button>\\r\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"isSaving\\\" (click)=\\\"onSubmit()\\\">\\r\\n            {{l('Save') | uppercase}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\r\\n  <mat-card fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <div>\\r\\n      <mat-label class=\\\"mat-h2\\\" mat-color=\\\"primary\\\">\\r\\n        {{this.l('perfil.password.title')}}\\r\\n      </mat-label>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"40%\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>{{l('perfil.password.newPassword')}}</mat-label>\\r\\n          <input type=\\\"password\\\" formControlName=\\\"newPassword\\\" matInput>\\r\\n          <mat-error *ngIf=\\\"form.dirty && form.hasError('error')\\\">\\r\\n            {{l(form.getError('error'))}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>{{l('perfil.password.repeatPassword')}}</mat-label>\\r\\n          <input type=\\\"password\\\" formControlName=\\\"repeatPassword\\\" matInput>\\r\\n          <mat-error *ngIf=\\\"form.dirty && form.hasError('match')\\\">\\r\\n            {{l(form.getError('match'))}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>{{l('perfil.password.inputPin')}}</mat-label>\\r\\n          <input formControlName=\\\"pin\\\" matInput>\\r\\n          <mat-error *ngIf=\\\"form.dirty && form.hasError('pin')\\\">\\r\\n            {{l(form.getError('pin'))}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <ng-content></ng-content>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"55%\\\">\\r\\n        <div class=\\\"password-rules\\\">\\r\\n          {{l('Password')}}:\\r\\n          <ul>\\r\\n            <li>{{l('perfil.password.info.length')}}</li>\\r\\n            <li>{{l('perfil.password.info.mustHave')}}</li>\\r\\n            <li>{{l('perfil.password.info.allowedChars')}}</li>\\r\\n            <li>{{l('perfil.password.info.mustMatch')}}</li>\\r\\n          </ul>\\r\\n\\r\\n          {{l('Pin')}}:\\r\\n          <ul>\\r\\n            <li>{{l('perfil.password.info.pinExpiration')}}</li>\\r\\n            <li>{{l('perfil.password.info.pinResending')}}</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </mat-card>\\r\\n</form>\\r\\n\"","module.exports = \"<form [formGroup]=\\\"form\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\r\\n  <mat-card fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <div>\\r\\n      <mat-label class=\\\"mat-h2\\\" mat-color=\\\"primary\\\">\\r\\n        {{this.l('perfil.user.title')}}\\r\\n      </mat-label>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"49%\\\">\\r\\n        <mat-label>{{l('perfil.user.nombre1')}}</mat-label>\\r\\n        <input formControlName=\\\"nombre1\\\" matInput required maxlength=\\\"50\\\">\\r\\n        <mat-error>\\r\\n          <ng-container *ngIf=\\\"form.get('nombre1').hasError('required')\\\">\\r\\n            {{l('perfil.user.error.nombre1Requerido')}}\\r\\n          </ng-container>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"49%\\\">\\r\\n        <mat-label>{{l('perfil.user.nombre2')}}</mat-label>\\r\\n        <input formControlName=\\\"nombre2\\\" matInput maxlength=\\\"50\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"49%\\\">\\r\\n        <mat-label>{{l('perfil.user.apellido1')}}</mat-label>\\r\\n        <input formControlName=\\\"apellido1\\\" matInput required maxlength=\\\"50\\\">\\r\\n        <mat-error>\\r\\n          <ng-container *ngIf=\\\"form.get('apellido1').hasError('required')\\\">\\r\\n            {{l('perfil.user.error.apellido1Requerido')}}\\r\\n          </ng-container>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"49%\\\">\\r\\n        <mat-label>{{l('perfil.user.apellido2')}}</mat-label>\\r\\n        <input formControlName=\\\"apellido2\\\" matInput maxlength=\\\"50\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"49%\\\">\\r\\n        <mat-label>{{l('perfil.user.telefonoFijo')}}</mat-label>\\r\\n        <input formControlName=\\\"telefonoFijo\\\" matInput maxlength=\\\"9\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"49%\\\">\\r\\n        <mat-label>{{l('perfil.user.correoElectronico')}}</mat-label>\\r\\n        <input formControlName=\\\"correoElectronico\\\" matInput required>\\r\\n        <mat-error>\\r\\n          <ng-container *ngIf=\\\"form.get('correoElectronico').hasError('required')\\\">\\r\\n            {{l('perfil.user.error.correoRequerido')}}\\r\\n          </ng-container>\\r\\n          <ng-container *ngIf=\\\"form.get('correoElectronico').hasError('pattern')\\\">\\r\\n            {{l('perfil.user.error.correoInvalido')}}\\r\\n          </ng-container>\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n  </mat-card>\\r\\n\\r\\n  <mat-card fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" [attr.hidden]=\\\"!perfil?.mcaAgente ? '' : null\\\">\\r\\n    <div>\\r\\n      <mat-label class=\\\"mat-h2\\\" mat-color=\\\"primary\\\">\\r\\n        {{this.l('perfil.comercial.title')}}\\r\\n      </mat-label>\\r\\n    </div>\\r\\n\\r\\n    <div fxLayout=\\\"column\\\">\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"49%\\\">\\r\\n        <mat-label>{{l('perfil.comercial.channel')}}</mat-label>\\r\\n        <mat-select formControlName=\\\"channel\\\" [compareWith]=\\\"compareWith\\\" #channel>\\r\\n          <mat-option *ngFor=\\\"let ch of channels\\\" [value]=\\\"ch\\\">\\r\\n            {{ ch.title }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"49%\\\">\\r\\n        <mat-label>{{l('perfil.comercial.tenant')}}</mat-label>\\r\\n        <mat-select formControlName=\\\"tenant\\\" [compareWith]=\\\"compareWith\\\">\\r\\n          <mat-option *ngFor=\\\"let tenant of form.value.channel.tenants\\\" [value]=\\\"tenant\\\">\\r\\n            {{ tenant.title }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"49%\\\">\\r\\n        <mat-label>{{l('perfil.comercial.codigo')}}</mat-label>\\r\\n        <input formControlName=\\\"codigo\\\" matInput>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</form>\\r\\n\"","module.exports = \"app-perfil-form-password button {\\n  margin-bottom: 1.34375em;\\n  text-align: left;\\n}\\n\\n.panel-botones {\\n  margin-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHMvd2Vic2l0ZS9zcmMvYXBwL3BlcmZpbC9mb3JtL0M6XFxGaWRlbnNsYXRcXEdpbmdlclxcZ2luZ2VyLmNsaWVudC5zcmMvYXBwc1xcd2Vic2l0ZVxcc3JjXFxhcHBcXHBlcmZpbFxcZm9ybVxcZm9ybS5jb21wb25lbnQuc2NzcyIsImFwcHMvd2Vic2l0ZS9zcmMvYXBwL3BlcmZpbC9mb3JtL2Zvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSx3QkFBQTtFQUNBLGdCQUFBO0FDQUo7O0FESUE7RUFDRSxnQkFBQTtBQ0RGIiwiZmlsZSI6ImFwcHMvd2Vic2l0ZS9zcmMvYXBwL3BlcmZpbC9mb3JtL2Zvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhcHAtcGVyZmlsLWZvcm0tcGFzc3dvcmQge1xyXG4gIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxLjM0Mzc1ZW07XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIH1cclxufVxyXG5cclxuLnBhbmVsLWJvdG9uZXMge1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuIiwiYXBwLXBlcmZpbC1mb3JtLXBhc3N3b3JkIGJ1dHRvbiB7XG4gIG1hcmdpbi1ib3R0b206IDEuMzQzNzVlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLnBhbmVsLWJvdG9uZXMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufSJdfQ== */\"","import { Component, OnInit, Injector, ViewChild } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { PerfilUsuarioDto } from '@shared/service-proxies/service-proxies';\r\nimport { PerfilFormUserComponent } from './user/user.component';\r\nimport { PerfilFormPasswordComponent } from './password/password.component';\r\nimport { catchError, first, switchMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-perfil-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n})\r\nexport class PerfilFormComponent extends AppComponentBase implements OnInit {\r\n  isPinSent = false;\r\n  isSaving = false;\r\n  perfil: PerfilUsuarioDto;\r\n\r\n  @ViewChild('user', { static: true }) cmpUser: PerfilFormUserComponent;\r\n  @ViewChild('pass', { static: true }) cmpPass: PerfilFormPasswordComponent;\r\n\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onPasswordChange() {\r\n    // TODO consume RecuperarPassword\r\n    // TODO show snack\r\n    this.isPinSent = true;\r\n  }\r\n\r\n  onSubmit() {\r\n    of((this.isSaving = true))\r\n      .pipe(\r\n        switchMap(() => this.cmpUser.submit()),\r\n        switchMap(() => (this.isPinSent ? this.cmpPass.submit() : of(true))),\r\n        catchError((err) => of(err)),\r\n        first()\r\n      )\r\n      .subscribe(\r\n        () => {\r\n          // TODO show snack\r\n        },\r\n        () => {\r\n          // TODO show error snack\r\n        },\r\n        () => {\r\n          this.isSaving = false;\r\n          // TODO redirect to home?\r\n        }\r\n      );\r\n  }\r\n}\r\n","module.exports = \".password-rules {\\n  font-size: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHMvd2Vic2l0ZS9zcmMvYXBwL3BlcmZpbC9mb3JtL3Bhc3N3b3JkL0M6XFxGaWRlbnNsYXRcXEdpbmdlclxcZ2luZ2VyLmNsaWVudC5zcmMvYXBwc1xcd2Vic2l0ZVxcc3JjXFxhcHBcXHBlcmZpbFxcZm9ybVxccGFzc3dvcmRcXHBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIiwiYXBwcy93ZWJzaXRlL3NyYy9hcHAvcGVyZmlsL2Zvcm0vcGFzc3dvcmQvcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0FDQ0YiLCJmaWxlIjoiYXBwcy93ZWJzaXRlL3NyYy9hcHAvcGVyZmlsL2Zvcm0vcGFzc3dvcmQvcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFzc3dvcmQtcnVsZXMge1xyXG4gIGZvbnQtc2l6ZTogOTAlO1xyXG59XHJcbiIsIi5wYXNzd29yZC1ydWxlcyB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufSJdfQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { Observable, of, throwError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-perfil-form-password',\r\n  templateUrl: './password.component.html',\r\n  styleUrls: ['./password.component.scss']\r\n})\r\nexport class PerfilFormPasswordComponent extends AppComponentBase implements OnInit {\r\n  form: FormGroup;\r\n\r\n  channels = [\r\n    { value: '', title: super.l('value.default') }\r\n  ];\r\n  tenants = [\r\n    { value: '', title: super.l('value.default') }\r\n  ];\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    private builder: FormBuilder\r\n  ) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.builder.group({\r\n      newPassword: ['', [Validators.required]],\r\n      repeatPassword: ['', [Validators.required]],\r\n      pin: ['', Validators.required],\r\n    }, {\r\n      validators: this.validate\r\n    });\r\n\r\n    // TODO fill the initial values\r\n  }\r\n\r\n  validate(form: FormGroup) {\r\n    const password = form.get('newPassword').value;\r\n    const confirm = form.get('repeatPassword').value;\r\n\r\n    const oneLowercaseLetter = password.match('(?=.*[a-z])');\r\n    const oneUppercaseLetter = password.match('(?=.*[A-Z])');\r\n    const oneNumber = password.match('(?=.*[0-9])');\r\n    const oneSpecialChar = password.match('(?=.*[^a-zA-Z0-9])');\r\n    const hasMinLength = password.length >= 8;\r\n    const hasMaxLength = password.length <= 16;\r\n    const passwordMatch = password ? password === confirm : false;\r\n\r\n    let error = null;\r\n\r\n    if (!oneLowercaseLetter) {\r\n      error = { error: 'perfil.password.error.noLowerCase' };\r\n    } else if (!oneUppercaseLetter) {\r\n      error = { error: 'perfil.password.error.noUpperCase' };\r\n    } else if (!oneNumber) {\r\n      error = { error: 'perfil.password.error.noNumber' };\r\n    } else if (!oneSpecialChar) {\r\n      error = { error: 'perfil.password.error.noSpecialChar' };\r\n    } else if (!hasMinLength) {\r\n      error = { error: 'perfil.password.error.minLength' };\r\n    } else if (!hasMaxLength) {\r\n      error = { error: 'perfil.password.error.maxLength' };\r\n    } else if (!passwordMatch) {\r\n      error = { match: 'perfil.password.error.noMatch' };\r\n    }\r\n\r\n    if (error) {\r\n      form.get('newPassword').setErrors(error);\r\n      if (error.match) {\r\n        form.get('repeatPassword').setErrors(error);\r\n      }\r\n    }\r\n\r\n    return error;\r\n  }\r\n\r\n  submit(): Observable<boolean> {\r\n    if (!this.form.dirty) {\r\n      return of(true);\r\n    } else if (this.form.valid) {\r\n      // TODO save this.form.value\r\n      // TODO catch pin error and highlight the field\r\n      this.form.markAsPristine();\r\n      return of(true);\r\n    } else {\r\n      // TODO mark as invalid\r\n      return throwError(false);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL3dlYnNpdGUvc3JjL2FwcC9wZXJmaWwvZm9ybS91c2VyL3VzZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { PerfilUsuarioDto, PerfilUsuarioServiceProxy, CanalesDto, SucursalesDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppSessionService } from '@shared/session/app-session.service';\r\nimport { find } from 'lodash';\r\nimport { Observable, of, throwError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-perfil-form-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class PerfilFormUserComponent extends AppComponentBase implements OnInit {\r\n  form: FormGroup;\r\n  perfil: PerfilUsuarioDto;\r\n\r\n  channels: Array<any>;\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    private builder: FormBuilder,\r\n    private user: PerfilUsuarioServiceProxy,\r\n    private session: AppSessionService\r\n  ) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.builder.group({\r\n      agenteId: null,\r\n      userId: null,\r\n      nombre1: [null, Validators.required],\r\n      nombre2: null,\r\n      apellido1: [null, Validators.required],\r\n      apellido2: null,\r\n      codigo: null,\r\n      correoElectronico: [null, [Validators.required, Validators.pattern(/^[^@]+@[^@]+\\.[^@]{2,}$/)]],\r\n      telefonoFijo: null,\r\n      channel: [{ value: 0 }, Validators.required],\r\n      tenant: [{ value: 0 }, Validators.required]\r\n    });\r\n\r\n    this.user.obtener(this.session.userId).subscribe(\r\n      perfil => {\r\n        this.perfil = perfil;\r\n        this.form.patchValue(perfil.agenteDto);\r\n\r\n        // fill channels and tenants\r\n        const mapTenant = (sc: SucursalesDto) => ({\r\n          value: sc.sucursalId,\r\n          title: sc.nombre\r\n        });\r\n        const mapChannel = (ch: CanalesDto) => ({\r\n          value: ch.canalId,\r\n          title: ch.nombre,\r\n          tenants: ch.sucursalesDtos.map(mapTenant)\r\n        });\r\n\r\n        this.channels = perfil.canalesDtos.map(mapChannel);\r\n\r\n        // patch channel and tenant\r\n        const channel = find(perfil.canalesDtos, ch => ch.sucursalesDtos.some(sc => sc.mcaPrincipal));\r\n        if (channel) {\r\n          this.form.patchValue({ channel: mapChannel(channel) });\r\n\r\n          const tenant = find(channel.sucursalesDtos, sc => sc.mcaPrincipal);\r\n          if (tenant) {\r\n            this.form.patchValue({ tenant: mapTenant(tenant) });\r\n          }\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  compareWith(option: any, selected: any) {\r\n    return option.value === selected.value;\r\n  }\r\n\r\n  submit(): Observable<boolean> {\r\n    if (!this.form.dirty) {\r\n      return of(true);\r\n    } else if (this.form.valid) {\r\n      // TODO save this.form.value\r\n      this.form.markAsPristine();\r\n      return of(true);\r\n    } else {\r\n      // TODO mark as invalid\r\n      return throwError(false);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PerfilFormComponent } from './perfil.barrel';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PerfilFormComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PerfilRoutingModule { }\r\n","import { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { ServiceProxyModule } from '@shared/service-proxies/service-proxy.module';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { PerfilFormComponent } from './form/form.component';\r\nimport { PerfilFormPasswordComponent } from './form/password/password.component';\r\nimport { PerfilFormUserComponent } from './form/user/user.component';\r\n\r\nexport const PerfilImports = [\r\n  FlexLayoutModule,\r\n  ReactiveFormsModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  ServiceProxyModule,\r\n  SharedModule\r\n]\r\n\r\nexport const PerfilComponents = [\r\n  PerfilFormComponent,\r\n  PerfilFormPasswordComponent,\r\n  PerfilFormUserComponent\r\n];\r\n\r\nexport { PerfilFormComponent };\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PerfilRoutingModule } from './perfil-routing.module';\r\nimport { PerfilComponents, PerfilImports } from './perfil.barrel';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PerfilRoutingModule,\r\n    ...PerfilImports\r\n  ],\r\n  declarations: PerfilComponents\r\n})\r\nexport class PerfilModule {}\r\n"],"sourceRoot":""}